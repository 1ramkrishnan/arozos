{"version":3,"sources":["App.js","serviceWorker.js","imageList.js","MiddlePanel.js","FolderList.js","SearchAppMenu.js","index.js","logo.svg"],"names":["App","Boolean","window","location","hostname","match","imageList","props","state","images","error","isLoaded","items","fetch","method","headers","body","JSON","stringify","folder","this","path","then","res","json","result","setState","message","enableLightbox","enableImageSelection","LinearProgress","React","Component","defaultProps","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","height","icon","color","TitlebarGridList","classes","useState","setError","setIsLoaded","setItems","folderName","setFolderName","onChanageFolder","folderN","console","log","onChange","useEffect","className","GridList","cellHeight","cols","map","tile","GridListTile","key","img","onClick","VPath","src","alt","Foldername","GridListTileBar","title","actionIcon","IconButton","aria-label","BorderLinearProgress","withStyles","colorPrimary","backgroundColor","palette","grey","type","bar","borderRadius","flexGrow","menuButton","marginRight","spacing","toolbar","alignItems","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexShrink","whiteSpace","overflowX","breakpoints","up","background","paper","position","bottom","left","right","Mcontainer","top","Alert","elevation","variant","ButtonAppBar","useTheme","open","setOpen","Settingopen","setSettingOpen","handleSettingClose","Alertopen","setAlertOpen","handleAlertClick","handleAlertClose","event","reason","Imagelistopen","setImagelistOpen","Folderlistopen","setFolderlistOpen","setFolderNameF","AppBar","style","clsx","appBar","appBarShift","Toolbar","edge","hide","Typography","Button","startIcon","Avatar","Drawer","drawerOpen","drawerClose","direction","Divider","List","text","index","ListItem","button","value","ListItemIcon","ListItemText","primary","secondary","content","Snackbar","autoHideDuration","onClose","severity","Modal","aria-labelledby","aria-describedby","modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Grid","container","justify","ListItemAvatar","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.00be38a2.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n    return ( <button> 大家好 </button>\n    );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Gallery from 'react-grid-gallery';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass imageList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            images: this.props.images,\n\n            error: null,\n            isLoaded: false,\n            items: [],\n        };\n\n    }\n\n    componentDidMount() {\n        fetch(\"/system/ajgi/interface?script=/Photo/backend/listFile.js\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ folder: this.props.path })\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        images: result\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    });\n                }\n            )\n    }\n\n    setPath() {\n        this.setState({ path: \"user:/Photo/Photo/uploads/\" });\n    }\n\n    render() {\n        const { isLoaded, items, error } = this.state;\n        if (error) {\n            return <div>Error: {error.message} (imageList.js)</div>;\n        }else if(!isLoaded) {\n            return <div><LinearProgress /></div>;\n        } else {\n            return ( < Gallery images = { this.state.images }\n                enableLightbox = { true }\n                enableImageSelection = { false }\n                />\n            );\n        }\n    }\n}\n\nimageList.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            src: PropTypes.string.isRequired,\n            thumbnail: PropTypes.string.isRequired,\n            srcset: PropTypes.array,\n            caption: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.element\n            ]),\n            thumbnailWidth: PropTypes.number.isRequired,\n            thumbnailHeight: PropTypes.number.isRequired\n        })\n    ).isRequired\n};\n\n\nimageList.defaultProps = {\n    images: []\n};\n\nexport default imageList;","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport ImageList from './imageList';\n\nclass MiddlePanel extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"React\",\n            showHideDemo1: false,\n            showHideDemo2: false,\n            showHideDemo3: false\n        };\n        this.hideComponent = this.hideComponent.bind(this);\n    }\n\n    hideComponent(name) {\n        console.log(name);\n        switch (name) {\n            case \"showHideDemo1\":\n                this.setState({ showHideDemo1: !this.state.showHideDemo1 });\n                break;\n            case \"showHideDemo2\":\n                this.setState({ showHideDemo2: !this.state.showHideDemo2 });\n                break;\n            case \"showHideDemo3\":\n                this.setState({ showHideDemo3: !this.state.showHideDemo3 });\n                break;\n        }\n    }\n\n    render() {\n        const { showHideDemo1, showHideDemo2, showHideDemo3 } = this.state;\n        return (\n            <div>\n                {showHideDemo1 && <ImageList />}\n                {showHideDemo2 && <ImageList />}\n                {showHideDemo3 && <ImageList />}\n                <div>\n                    <button onClick={() => this.hideComponent(\"showHideDemo1\")}>\n                        Click to hide Demo1 component\n          </button>\n                    <button onClick={() => this.hideComponent(\"showHideDemo2\")}>\n                        Click to hide Demo2 component\n          </button>\n                    <button onClick={() => this.hideComponent(\"showHideDemo3\")}>\n                        Click to hide Demo3 component\n          </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MiddlePanel;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\nimport { useEffect } from 'react';\nimport imageList from './imageList.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function TitlebarGridList(props) {\n\n    const classes = useStyles();\n\n    const [error, setError] = React.useState(null);\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [items, setItems] = React.useState([]);\n\n    const [folderName, setFolderName] = React.useState('user:/Photo/Photo/uploads/');\n\n    const onChanageFolder = (folderN) => {\n        setFolderName(folderN);\n        console.log(\"1\" + folderName);\n        props.onChange(folderN);\n    }\n\n    useEffect(() => {\n        //fetch(\"http://localhost:3000/listFolder\")\n        fetch(\"/system/ajgi/interface?script=/Photo/backend/listFolder.js\", {\n            method: 'post',\n            body: JSON.stringify({ folder: folderName })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    \n    if (error) {\n        return <div>Error: {error.message} (FolderList.js)</div>;\n    } else if (!isLoaded) {\n        return <div><LinearProgress /></div>;\n    } else {\n        return (\n            <div className={classes.root}>\n                <GridList cellHeight={180} cols={5} className={classes.gridList}>\n                    {items.map((tile) => (\n                        <GridListTile key={tile.img} onClick={() => onChanageFolder(tile.VPath)}>\n                            <img src={tile.img} alt={tile.Foldername} />\n                            <GridListTileBar\n                                title={tile.Foldername}\n                                actionIcon={\n                                    <IconButton aria-label={`info about ${tile.Foldername}`} onClick={() => onChanageFolder(tile.VPath)} className={classes.icon}>\n                                        <ArrowForwardIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoIcon from '@material-ui/icons/Info';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ImageList from './imageList';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport ShareIcon from '@material-ui/icons/Share';\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Paper from '@material-ui/core/Paper';\nimport TodayIcon from '@material-ui/icons/Today';\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport MiddlePanel from './MiddlePanel';\nimport FolderList from './FolderList';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst drawerWidth = 240;\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: '#1a90ff',\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        height: '100%',\n        //boxShadow: theme.shadows[5],\n        //padding: theme.spacing(2, 4, 3),\n    },\n    fabL: {\n        position: 'absolute',\n        bottom: '50%',\n        left: theme.spacing(2),\n    },\n    fabR: {\n        position: 'absolute',\n        bottom: '50%',\n        //left: `calc(95% - ${theme.spacing(2)}px)`,\n        //right: theme.spacing(2),\n        right: `calc(${theme.spacing(2)}px + ( 100vw / 4 ))`,\n        Mcontainer: {\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                height: \"100%\",\n                width: \"100%\",\n                alignItems: \"center\"\n        },\n    },\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [Settingopen, setSettingOpen] = React.useState(false);\n\n    const handleSettingOpen = () => {\n        setSettingOpen(true);\n    };\n\n    const handleSettingClose = () => {\n        setSettingOpen(false);\n    };\n\n    const [Alertopen, setAlertOpen] = React.useState(false);\n\n    const handleAlertClick = () => {\n        setAlertOpen(true);\n    };\n\n    const handleAlertClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setAlertOpen(false);\n    };\n\n    const [Imagelistopen, setImagelistOpen] = React.useState(true);\n    const [Folderlistopen, setFolderlistOpen] = React.useState(false);\n\n    const [folderName, setFolderName] = React.useState('user:/Photo/Photo/uploads/');\n\n    \n    const setFolderNameF = (folderN) => {\n        setFolderName(folderN);\n        console.log(\"3\" + folderName);\n        setImagelistOpen(true);\n        setFolderlistOpen(false);\n    }\n\n    const handleClick = value => () => {\n        console.log(value);\n        switch (value) {\n            case \"Photos\":\n                setImagelistOpen(true);\n                setFolderlistOpen(false);\n                break;\n            case \"Albums\":\n                setFolderlistOpen(true);\n                setImagelistOpen(false);\n                break;\n            case \"Sharing\":\n                setAlertOpen(true);\n            case \"Utilities\":\n                setAlertOpen(true);\n        }\n    }\n    //1\n    return (\n       \n    \n        <div className={classes.root}>\n            <AppBar position=\"fixed\" style={{ background: '#2196f3' }} className={\n                clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })\n            }>\n                <Toolbar >\n                    <IconButton edge=\"start\" onClick={handleDrawerOpen} className={\n                        clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })\n                    } className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        ArOZ Photo\n                    </Typography>\n                    <Button variant=\"contained\" startIcon={<CloudUploadIcon />} type=\"button\" onClick={handleAlertClick}>Upload</Button>\n                    <IconButton style={{ color: '#ffffff' }} aria-label=\"help\" onClick={handleAlertClick}>\n                        <HelpOutlineIcon />\n                    </IconButton>\n                    <IconButton style={{ color: '#ffffff' }} aria-label=\"settings\" onClick={handleSettingOpen}>\n                        <SettingsIcon />\n                    </IconButton>\n                    <Avatar alt=\"ArOZ Admin\" src=\"/static/images/avatar/1.jpg\" />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={\n                    clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })\n                }\n                classes={\n                    {\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }\n                }>\n                <div className={classes.toolbar}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {['Photos', 'Sharing', 'Albums', 'Utilities'].map((text, index) => (\n                            <ListItem button key={text} onClick={handleClick(text)}>\n                                <ListItemIcon>{index == 0 ? < PhotoIcon /> : index == 1 ? < ShareIcon /> : index == 2 ? < PhotoAlbumIcon /> : < LibraryAddCheckIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['Storage'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{< CloudIcon />}</ListItemIcon>\n                                <ListItemText primary={text} secondary={<BorderLinearProgress variant=\"determinate\" value={0} />} />\n                            </ListItem>\n                        ))}\n                    </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {Imagelistopen && <ImageList path={folderName}/>}\n                {Folderlistopen && <FolderList onChange={setFolderNameF} folderName={setFolderNameF}/>}\n            </main>\n            <Snackbar open={Alertopen} autoHideDuration={6000} onClose={handleAlertClose}>\n                <Alert onClose={handleAlertClose} severity=\"error\">\n                    This function has not been implemented on this platform (aCloud 0x0)\n        </Alert>\n            </Snackbar>\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={Settingopen}\n                    onClose={handleSettingClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={Settingopen}>\n                    <div className={classes.paper}>\n                        <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n                            <IconButton color=\"primary\" aria-label=\"close\" onClick={handleSettingClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                        <List>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InfoIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Version\" secondary=\"v1.0.0-alpha\" />\n                            </ListItem>\n                            <ListItem button>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InfoIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary=\"Developer\" secondary=\"Alanyeung.co\" />\n                            </ListItem>\n                        </List>\n                        </div>\n                    </Fade>\n                </Modal>\n        </div>\n    );\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport SearchAppMenu from './SearchAppMenu';\n//import ButtonAppBar from './testM';\n//import preview from './modal';\nimport GP from './gp';\n//import MainPanel from './MainPanel';\n\nReactDOM.render(\n    <div>\n        <SearchAppMenu />\n        <App />\n        <preview />\n    </div>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './modal';\n\nReactDOM.render( < Demo / > , document.querySelector('#root'));\n*/\n\n/*\n    <SearchAppMenu/>\n    <App/>\n    <preview/>\n    */","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}